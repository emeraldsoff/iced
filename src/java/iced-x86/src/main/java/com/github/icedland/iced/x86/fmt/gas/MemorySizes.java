// SPDX-License-Identifier: MIT
// Copyright (C) 2018-present iced project and contributors

package com.github.icedland.iced.x86.fmt.gas;

import com.github.icedland.iced.x86.internal.IcedConstants;
import com.github.icedland.iced.x86.internal.fmt.FormatterString;

final class MemorySizes {
	public static final FormatterString[] allMemorySizes = getMemorySizes();

	private static FormatterString[] getMemorySizes() {
		// GENERATOR-BEGIN: ConstData
		// ‚ö†Ô∏èThis was generated by GENERATOR!ü¶π‚Äç‚ôÇÔ∏è
		FormatterString empty = new FormatterString("");
		FormatterString b1to2 = new FormatterString("1to2");
		FormatterString b1to4 = new FormatterString("1to4");
		FormatterString b1to8 = new FormatterString("1to8");
		FormatterString b1to16 = new FormatterString("1to16");
		FormatterString b1to32 = new FormatterString("1to32");
		// GENERATOR-END: ConstData

		byte[] bcstToData = new byte[] {
			// GENERATOR-BEGIN: BcstTo
			// ‚ö†Ô∏èThis was generated by GENERATOR!ü¶π‚Äç‚ôÇÔ∏è
			(byte)0x01,
			(byte)0x01,
			(byte)0x01,
			(byte)0x02,
			(byte)0x01,
			(byte)0x03,
			(byte)0x03,
			(byte)0x02,
			(byte)0x02,
			(byte)0x01,
			(byte)0x01,
			(byte)0x01,
			(byte)0x03,
			(byte)0x02,
			(byte)0x01,
			(byte)0x02,
			(byte)0x01,
			(byte)0x01,
			(byte)0x02,
			(byte)0x02,
			(byte)0x04,
			(byte)0x04,
			(byte)0x03,
			(byte)0x03,
			(byte)0x02,
			(byte)0x02,
			(byte)0x02,
			(byte)0x04,
			(byte)0x03,
			(byte)0x02,
			(byte)0x03,
			(byte)0x02,
			(byte)0x02,
			(byte)0x03,
			(byte)0x03,
			(byte)0x05,
			(byte)0x05,
			(byte)0x04,
			(byte)0x04,
			(byte)0x03,
			(byte)0x03,
			(byte)0x03,
			(byte)0x05,
			(byte)0x04,
			(byte)0x03,
			(byte)0x04,
			(byte)0x04,
			(byte)0x03,
			(byte)0x03,
			(byte)0x04,
			// GENERATOR-END: BcstTo
		};

		FormatterString[] infos = new FormatterString[IcedConstants.MEMORY_SIZE_ENUM_COUNT];
		for (int i = 0; i < infos.length; i++) {
			FormatterString bcstTo;
			if (i < IcedConstants.FIRST_BROADCAST_MEMORY_SIZE)
				bcstTo = empty;
			else {
				switch (bcstToData[i - IcedConstants.FIRST_BROADCAST_MEMORY_SIZE] & 0xFF) {
				// GENERATOR-BEGIN: BroadcastToKindSwitch
				// ‚ö†Ô∏èThis was generated by GENERATOR!ü¶π‚Äç‚ôÇÔ∏è
				case 0x00:
					bcstTo = empty;
					break;
				case 0x01:
					bcstTo = b1to2;
					break;
				case 0x02:
					bcstTo = b1to4;
					break;
				case 0x03:
					bcstTo = b1to8;
					break;
				case 0x04:
					bcstTo = b1to16;
					break;
				case 0x05:
					bcstTo = b1to32;
					break;
				// GENERATOR-END: BroadcastToKindSwitch
				default:
					throw new UnsupportedOperationException();
				}
			}

			infos[i] = bcstTo;
		}

		return infos;
	}
}
